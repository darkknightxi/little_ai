# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/little_ai',
                'doc_host': 'https://darkknightxi.github.io',
                'git_url': 'https://github.com/darkknightxi/little_ai',
                'lib_path': 'little_ai'},
  'syms': { 'little_ai.activations': { 'little_ai.activations.ActivationStats': ( 'activations.html#activationstats',
                                                                                  'little_ai/activations.py'),
                                       'little_ai.activations.ActivationStats.__init__': ( 'activations.html#activationstats.__init__',
                                                                                           'little_ai/activations.py'),
                                       'little_ai.activations.ActivationStats.color_dim': ( 'activations.html#activationstats.color_dim',
                                                                                            'little_ai/activations.py'),
                                       'little_ai.activations.ActivationStats.dead_chart': ( 'activations.html#activationstats.dead_chart',
                                                                                             'little_ai/activations.py'),
                                       'little_ai.activations.ActivationStats.plot_stats': ( 'activations.html#activationstats.plot_stats',
                                                                                             'little_ai/activations.py'),
                                       'little_ai.activations.Hook': ('activations.html#hook', 'little_ai/activations.py'),
                                       'little_ai.activations.Hook.__del__': ('activations.html#hook.__del__', 'little_ai/activations.py'),
                                       'little_ai.activations.Hook.__init__': ( 'activations.html#hook.__init__',
                                                                                'little_ai/activations.py'),
                                       'little_ai.activations.Hook.remove': ('activations.html#hook.remove', 'little_ai/activations.py'),
                                       'little_ai.activations.Hooks': ('activations.html#hooks', 'little_ai/activations.py'),
                                       'little_ai.activations.Hooks.__del__': ( 'activations.html#hooks.__del__',
                                                                                'little_ai/activations.py'),
                                       'little_ai.activations.Hooks.__delitem__': ( 'activations.html#hooks.__delitem__',
                                                                                    'little_ai/activations.py'),
                                       'little_ai.activations.Hooks.__enter__': ( 'activations.html#hooks.__enter__',
                                                                                  'little_ai/activations.py'),
                                       'little_ai.activations.Hooks.__exit__': ( 'activations.html#hooks.__exit__',
                                                                                 'little_ai/activations.py'),
                                       'little_ai.activations.Hooks.__init__': ( 'activations.html#hooks.__init__',
                                                                                 'little_ai/activations.py'),
                                       'little_ai.activations.Hooks.remove': ('activations.html#hooks.remove', 'little_ai/activations.py'),
                                       'little_ai.activations.HooksCallback': ( 'activations.html#hookscallback',
                                                                                'little_ai/activations.py'),
                                       'little_ai.activations.HooksCallback.__init__': ( 'activations.html#hookscallback.__init__',
                                                                                         'little_ai/activations.py'),
                                       'little_ai.activations.HooksCallback.__iter__': ( 'activations.html#hookscallback.__iter__',
                                                                                         'little_ai/activations.py'),
                                       'little_ai.activations.HooksCallback.__len__': ( 'activations.html#hookscallback.__len__',
                                                                                        'little_ai/activations.py'),
                                       'little_ai.activations.HooksCallback._hookfunc': ( 'activations.html#hookscallback._hookfunc',
                                                                                          'little_ai/activations.py'),
                                       'little_ai.activations.HooksCallback.after_fit': ( 'activations.html#hookscallback.after_fit',
                                                                                          'little_ai/activations.py'),
                                       'little_ai.activations.HooksCallback.before_fit': ( 'activations.html#hookscallback.before_fit',
                                                                                           'little_ai/activations.py'),
                                       'little_ai.activations.append_stats': ('activations.html#append_stats', 'little_ai/activations.py'),
                                       'little_ai.activations.get_hist': ('activations.html#get_hist', 'little_ai/activations.py'),
                                       'little_ai.activations.get_min': ('activations.html#get_min', 'little_ai/activations.py'),
                                       'little_ai.activations.set_seed': ('activations.html#set_seed', 'little_ai/activations.py')},
            'little_ai.augment': { 'little_ai.augment.CapturePreds': ('augment.html#capturepreds', 'little_ai/augment.py'),
                                   'little_ai.augment.CapturePreds.after_batch': ( 'augment.html#capturepreds.after_batch',
                                                                                   'little_ai/augment.py'),
                                   'little_ai.augment.CapturePreds.after_fit': ( 'augment.html#capturepreds.after_fit',
                                                                                 'little_ai/augment.py'),
                                   'little_ai.augment.CapturePreds.before_fit': ( 'augment.html#capturepreds.before_fit',
                                                                                  'little_ai/augment.py'),
                                   'little_ai.augment.RandCopy': ('augment.html#randcopy', 'little_ai/augment.py'),
                                   'little_ai.augment.RandCopy.__init__': ('augment.html#randcopy.__init__', 'little_ai/augment.py'),
                                   'little_ai.augment.RandCopy.forward': ('augment.html#randcopy.forward', 'little_ai/augment.py'),
                                   'little_ai.augment.RandErase': ('augment.html#randerase', 'little_ai/augment.py'),
                                   'little_ai.augment.RandErase.__init__': ('augment.html#randerase.__init__', 'little_ai/augment.py'),
                                   'little_ai.augment.RandErase.forward': ('augment.html#randerase.forward', 'little_ai/augment.py'),
                                   'little_ai.augment._flops': ('augment.html#_flops', 'little_ai/augment.py'),
                                   'little_ai.augment._rand_copy1': ('augment.html#_rand_copy1', 'little_ai/augment.py'),
                                   'little_ai.augment._rand_erase1': ('augment.html#_rand_erase1', 'little_ai/augment.py'),
                                   'little_ai.augment.capture_preds': ('augment.html#capture_preds', 'little_ai/augment.py'),
                                   'little_ai.augment.rand_copy': ('augment.html#rand_copy', 'little_ai/augment.py'),
                                   'little_ai.augment.rand_erase': ('augment.html#rand_erase', 'little_ai/augment.py'),
                                   'little_ai.augment.show_image_batch': ('augment.html#show_image_batch', 'little_ai/augment.py'),
                                   'little_ai.augment.summary': ('augment.html#summary', 'little_ai/augment.py')},
            'little_ai.conv': { 'little_ai.conv.collate_device': ('convolutions.html#collate_device', 'little_ai/conv.py'),
                                'little_ai.conv.conv': ('convolutions.html#conv', 'little_ai/conv.py'),
                                'little_ai.conv.to_device': ('convolutions.html#to_device', 'little_ai/conv.py')},
            'little_ai.core': {'little_ai.core.foo': ('core.html#foo', 'little_ai/core.py')},
            'little_ai.datasets': { 'little_ai.datasets.DataLoaders': ('datasets.html#dataloaders', 'little_ai/datasets.py'),
                                    'little_ai.datasets.DataLoaders.__init__': ( 'datasets.html#dataloaders.__init__',
                                                                                 'little_ai/datasets.py'),
                                    'little_ai.datasets.DataLoaders.from_dd': ( 'datasets.html#dataloaders.from_dd',
                                                                                'little_ai/datasets.py'),
                                    'little_ai.datasets.collate_dict': ('datasets.html#collate_dict', 'little_ai/datasets.py'),
                                    'little_ai.datasets.get_grid': ('datasets.html#get_grid', 'little_ai/datasets.py'),
                                    'little_ai.datasets.inplace': ('datasets.html#inplace', 'little_ai/datasets.py'),
                                    'little_ai.datasets.show_image': ('datasets.html#show_image', 'little_ai/datasets.py'),
                                    'little_ai.datasets.show_images': ('datasets.html#show_images', 'little_ai/datasets.py'),
                                    'little_ai.datasets.subplots': ('datasets.html#subplots', 'little_ai/datasets.py')},
            'little_ai.init': { 'little_ai.init.BatchTransformCB': ('initializing.html#batchtransformcb', 'little_ai/init.py'),
                                'little_ai.init.BatchTransformCB.__init__': ( 'initializing.html#batchtransformcb.__init__',
                                                                              'little_ai/init.py'),
                                'little_ai.init.BatchTransformCB.before_batch': ( 'initializing.html#batchtransformcb.before_batch',
                                                                                  'little_ai/init.py'),
                                'little_ai.init.GeneralRelu': ('initializing.html#generalrelu', 'little_ai/init.py'),
                                'little_ai.init.GeneralRelu.__init__': ('initializing.html#generalrelu.__init__', 'little_ai/init.py'),
                                'little_ai.init.GeneralRelu.forward': ('initializing.html#generalrelu.forward', 'little_ai/init.py'),
                                'little_ai.init._lsuv_stats': ('initializing.html#_lsuv_stats', 'little_ai/init.py'),
                                'little_ai.init.conv': ('initializing.html#conv', 'little_ai/init.py'),
                                'little_ai.init.get_model': ('initializing.html#get_model', 'little_ai/init.py'),
                                'little_ai.init.init_weights': ('initializing.html#init_weights', 'little_ai/init.py'),
                                'little_ai.init.lsuv_init': ('initializing.html#lsuv_init', 'little_ai/init.py'),
                                'little_ai.init.plot_func': ('initializing.html#plot_func', 'little_ai/init.py')},
            'little_ai.learner': { 'little_ai.learner.Callback': ('learner.html#callback', 'little_ai/learner.py'),
                                   'little_ai.learner.CancelBatchException': ('learner.html#cancelbatchexception', 'little_ai/learner.py'),
                                   'little_ai.learner.CancelEpochException': ('learner.html#cancelepochexception', 'little_ai/learner.py'),
                                   'little_ai.learner.CancelFitException': ('learner.html#cancelfitexception', 'little_ai/learner.py'),
                                   'little_ai.learner.DeviceCB': ('learner.html#devicecb', 'little_ai/learner.py'),
                                   'little_ai.learner.DeviceCB.__init__': ('learner.html#devicecb.__init__', 'little_ai/learner.py'),
                                   'little_ai.learner.DeviceCB.before_batch': ( 'learner.html#devicecb.before_batch',
                                                                                'little_ai/learner.py'),
                                   'little_ai.learner.DeviceCB.before_fit': ('learner.html#devicecb.before_fit', 'little_ai/learner.py'),
                                   'little_ai.learner.LRFinderCB': ('learner.html#lrfindercb', 'little_ai/learner.py'),
                                   'little_ai.learner.LRFinderCB.__init__': ('learner.html#lrfindercb.__init__', 'little_ai/learner.py'),
                                   'little_ai.learner.LRFinderCB.after_batch': ( 'learner.html#lrfindercb.after_batch',
                                                                                 'little_ai/learner.py'),
                                   'little_ai.learner.LRFinderCB.before_fit': ( 'learner.html#lrfindercb.before_fit',
                                                                                'little_ai/learner.py'),
                                   'little_ai.learner.LRFinderCB.cleanup_fit': ( 'learner.html#lrfindercb.cleanup_fit',
                                                                                 'little_ai/learner.py'),
                                   'little_ai.learner.Learner': ('learner.html#learner', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner.__getattr__': ('learner.html#learner.__getattr__', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner.__init__': ('learner.html#learner.__init__', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner._fit': ('learner.html#learner._fit', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner._one_batch': ('learner.html#learner._one_batch', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner._one_epoch': ('learner.html#learner._one_epoch', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner.callback': ('learner.html#learner.callback', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner.fit': ('learner.html#learner.fit', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner.one_epoch': ('learner.html#learner.one_epoch', 'little_ai/learner.py'),
                                   'little_ai.learner.Learner.training': ('learner.html#learner.training', 'little_ai/learner.py'),
                                   'little_ai.learner.MetricsCB': ('learner.html#metricscb', 'little_ai/learner.py'),
                                   'little_ai.learner.MetricsCB.__init__': ('learner.html#metricscb.__init__', 'little_ai/learner.py'),
                                   'little_ai.learner.MetricsCB._log': ('learner.html#metricscb._log', 'little_ai/learner.py'),
                                   'little_ai.learner.MetricsCB.after_batch': ( 'learner.html#metricscb.after_batch',
                                                                                'little_ai/learner.py'),
                                   'little_ai.learner.MetricsCB.after_epoch': ( 'learner.html#metricscb.after_epoch',
                                                                                'little_ai/learner.py'),
                                   'little_ai.learner.MetricsCB.before_epoch': ( 'learner.html#metricscb.before_epoch',
                                                                                 'little_ai/learner.py'),
                                   'little_ai.learner.MetricsCB.before_fit': ('learner.html#metricscb.before_fit', 'little_ai/learner.py'),
                                   'little_ai.learner.MomentumLearner': ('learner.html#momentumlearner', 'little_ai/learner.py'),
                                   'little_ai.learner.MomentumLearner.__init__': ( 'learner.html#momentumlearner.__init__',
                                                                                   'little_ai/learner.py'),
                                   'little_ai.learner.MomentumLearner.zero_grad': ( 'learner.html#momentumlearner.zero_grad',
                                                                                    'little_ai/learner.py'),
                                   'little_ai.learner.ProgressCB': ('learner.html#progresscb', 'little_ai/learner.py'),
                                   'little_ai.learner.ProgressCB.__init__': ('learner.html#progresscb.__init__', 'little_ai/learner.py'),
                                   'little_ai.learner.ProgressCB._log': ('learner.html#progresscb._log', 'little_ai/learner.py'),
                                   'little_ai.learner.ProgressCB.after_batch': ( 'learner.html#progresscb.after_batch',
                                                                                 'little_ai/learner.py'),
                                   'little_ai.learner.ProgressCB.after_epoch': ( 'learner.html#progresscb.after_epoch',
                                                                                 'little_ai/learner.py'),
                                   'little_ai.learner.ProgressCB.before_epoch': ( 'learner.html#progresscb.before_epoch',
                                                                                  'little_ai/learner.py'),
                                   'little_ai.learner.ProgressCB.before_fit': ( 'learner.html#progresscb.before_fit',
                                                                                'little_ai/learner.py'),
                                   'little_ai.learner.TrainCB': ('learner.html#traincb', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainCB.__init__': ('learner.html#traincb.__init__', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainCB.backward': ('learner.html#traincb.backward', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainCB.get_loss': ('learner.html#traincb.get_loss', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainCB.predict': ('learner.html#traincb.predict', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainCB.step': ('learner.html#traincb.step', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainCB.zero_grad': ('learner.html#traincb.zero_grad', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainLearner': ('learner.html#trainlearner', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainLearner.backward': ( 'learner.html#trainlearner.backward',
                                                                                'little_ai/learner.py'),
                                   'little_ai.learner.TrainLearner.get_loss': ( 'learner.html#trainlearner.get_loss',
                                                                                'little_ai/learner.py'),
                                   'little_ai.learner.TrainLearner.predict': ('learner.html#trainlearner.predict', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainLearner.step': ('learner.html#trainlearner.step', 'little_ai/learner.py'),
                                   'little_ai.learner.TrainLearner.zero_grad': ( 'learner.html#trainlearner.zero_grad',
                                                                                 'little_ai/learner.py'),
                                   'little_ai.learner.lr_find': ('learner.html#lr_find', 'little_ai/learner.py'),
                                   'little_ai.learner.run_cbs': ('learner.html#run_cbs', 'little_ai/learner.py'),
                                   'little_ai.learner.to_cpu': ('learner.html#to_cpu', 'little_ai/learner.py'),
                                   'little_ai.learner.with_cbs': ('learner.html#with_cbs', 'little_ai/learner.py'),
                                   'little_ai.learner.with_cbs.__call__': ('learner.html#with_cbs.__call__', 'little_ai/learner.py'),
                                   'little_ai.learner.with_cbs.__init__': ('learner.html#with_cbs.__init__', 'little_ai/learner.py')},
            'little_ai.resnet': { 'little_ai.resnet.ResBlock': ('resnet.html#resblock', 'little_ai/resnet.py'),
                                  'little_ai.resnet.ResBlock.__init__': ('resnet.html#resblock.__init__', 'little_ai/resnet.py'),
                                  'little_ai.resnet.ResBlock.forward': ('resnet.html#resblock.forward', 'little_ai/resnet.py'),
                                  'little_ai.resnet._conv_block': ('resnet.html#_conv_block', 'little_ai/resnet.py')},
            'little_ai.sgd': { 'little_ai.sgd.BaseSchedCB': ('accel_sgd.html#baseschedcb', 'little_ai/sgd.py'),
                               'little_ai.sgd.BaseSchedCB.__init__': ('accel_sgd.html#baseschedcb.__init__', 'little_ai/sgd.py'),
                               'little_ai.sgd.BaseSchedCB._step': ('accel_sgd.html#baseschedcb._step', 'little_ai/sgd.py'),
                               'little_ai.sgd.BaseSchedCB.before_fit': ('accel_sgd.html#baseschedcb.before_fit', 'little_ai/sgd.py'),
                               'little_ai.sgd.BatchSchedCB': ('accel_sgd.html#batchschedcb', 'little_ai/sgd.py'),
                               'little_ai.sgd.BatchSchedCB.after_batch': ('accel_sgd.html#batchschedcb.after_batch', 'little_ai/sgd.py'),
                               'little_ai.sgd.EpochSchedCB': ('accel_sgd.html#epochschedcb', 'little_ai/sgd.py'),
                               'little_ai.sgd.EpochSchedCB.after_epoch': ('accel_sgd.html#epochschedcb.after_epoch', 'little_ai/sgd.py'),
                               'little_ai.sgd.HasLearnCB': ('accel_sgd.html#haslearncb', 'little_ai/sgd.py'),
                               'little_ai.sgd.HasLearnCB.after_fit': ('accel_sgd.html#haslearncb.after_fit', 'little_ai/sgd.py'),
                               'little_ai.sgd.HasLearnCB.before_fit': ('accel_sgd.html#haslearncb.before_fit', 'little_ai/sgd.py'),
                               'little_ai.sgd.RecorderCB': ('accel_sgd.html#recordercb', 'little_ai/sgd.py'),
                               'little_ai.sgd.RecorderCB.__init__': ('accel_sgd.html#recordercb.__init__', 'little_ai/sgd.py'),
                               'little_ai.sgd.RecorderCB.after_batch': ('accel_sgd.html#recordercb.after_batch', 'little_ai/sgd.py'),
                               'little_ai.sgd.RecorderCB.before_fit': ('accel_sgd.html#recordercb.before_fit', 'little_ai/sgd.py'),
                               'little_ai.sgd.RecorderCB.plot': ('accel_sgd.html#recordercb.plot', 'little_ai/sgd.py')},
            'little_ai.training': { 'little_ai.training.Dataset': ('minibatch_training.html#dataset', 'little_ai/training.py'),
                                    'little_ai.training.Dataset.__getitem__': ( 'minibatch_training.html#dataset.__getitem__',
                                                                                'little_ai/training.py'),
                                    'little_ai.training.Dataset.__init__': ( 'minibatch_training.html#dataset.__init__',
                                                                             'little_ai/training.py'),
                                    'little_ai.training.Dataset.__len__': ( 'minibatch_training.html#dataset.__len__',
                                                                            'little_ai/training.py'),
                                    'little_ai.training.accuracy': ('minibatch_training.html#accuracy', 'little_ai/training.py'),
                                    'little_ai.training.fit': ('minibatch_training.html#fit', 'little_ai/training.py'),
                                    'little_ai.training.get_dls': ('minibatch_training.html#get_dls', 'little_ai/training.py'),
                                    'little_ai.training.report': ('minibatch_training.html#report', 'little_ai/training.py')}}}
